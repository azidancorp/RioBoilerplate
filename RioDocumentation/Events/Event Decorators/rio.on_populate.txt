on_populate
Triggered when the component has been created or has been reconciled.

This decorator makes the decorated method an event handler for on_populate events. The method will be called whenever the component has been created or has been reconciled. This allows you to asynchronously fetch any data right after component initialization.

This decorator can be used on both synchronous as well as asynchronous methods.

Signature
@rio.event.on_populate
Example
on_populate is often useful as a sort of "async init", where you can put async code that needs to be run when the component is instantiated. In this example we'll use it to perform an asynchronous HTTP request.

Python

import httpx
from dataclasses import field


class PypiVersionFetcher(rio.Component):
    module: str
    # The `version` attribute is initialized to an empty
    # string, which will will act as a placeholder until
    # the HTTP request finishes
    version: str = field(init=False, default="")

    @rio.event.on_populate
    async def on_populate(self):
        # Whenever this component is instantiated or
        # reconciled, fetch the version of the given module
        async with httpx.AsyncClient() as client:
            url = f"https://pypi.org/pypi/{self.module}/json"
            response = await client.get(url)
            self.version = response.json()["info"]["version"]

    def build(self):
        return rio.Text(f"Latest {self.module} version: {self.version}")