Spacer
An invisible component which grows by default.

Spacers are invisible components which add empty space between other components. While similar effects can often be achieved using margins and alignment, code utilizing spacers can sometimes be easier to read.

Note that unlike most components in Rio, Spacer does not have a natural size. Instead it defaults to a width and height of grow, as that is how they're most frequently used.

Constructor
Spacer(
    *, 
    min_width: float = 0, 
    min_height: float = 0, 
    grow_x: bool = True, 
    grow_y: bool = True, 
    # Inherited from `rio.Component`
    key: str | int | None = None, 
)
min_width
float
The minimum amount of horizontal space this component should request during layouting. The component will never be smaller than this size.

Please note that the space a Component receives during layouting may not match the request. As a general rule, for example, containers try to pass on all available space to children. If you really want a Component to only take up as much space as requested, consider specifying an alignment.

Sizes are measured in "font heights", so a width of 1 is the same as the height of a single line of text.

min_height
float
The minimum amount of vertical space this component should request during layouting. The component will never be smaller than this size.

Please note that the space a Component receives during layouting may not match the request. As a general rule, for example, containers try to pass on all available space to children. If you really want a Component to only take up as much space as requested, consider specifying an alignment.

Sizes are measured in "font heights", so a width of 1 is the same as the height of a single line of text.

grow_x
bool
Whether this component should request all the superfluous horizontal space available in its parent. Containers normally divide up any extra space evenly between their children. However, if components have grow_x, some containers (such as rio.Row) will give all remaining space to those components first.

grow_y
bool
Whether this component should request all the superfluous vertical space available in its parent. Containers normally divide up any extra space evenly between their children. However, if components have grow_y, some containers (such as rio.Column) will give all remaining space to those components first.

key
str | int | None
A unique identifier for this component. If two components with the same key are present during reconciliation they will be considered the same component and their state will be preserved. If no key is specified, reconciliation falls back to a less precise method, by comparing the location of the component in the component tree.

Examples
This example will display two texts in a Row, with one of them being pushed to the very left and the other to the very right:

Python

rio.Row(
    rio.Text("Hello"),
    rio.Spacer(),
    rio.Text("World"),
)